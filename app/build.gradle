plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}
apply from: 'dependence.gradle'
apply from: 'product.gradle'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    // 编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    //开启dataBinding支持
    dataBinding{
        enabled true
    }

    //viewBinding开启
    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        applicationId "com.jacky.wanandroidkotlin"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //开启multiDex
        multiDexEnabled true
        //无需多版本控制，gradle3.0+需要配置这句话
        flavorDimensions "zenchn"
        ndk {
            // 设置支持的SO库架构
            //arm-v7a 兼容v8a,上架谷歌商店必须加v8a
            abiFilters 'armeabi-v7a', 'arm64-v8a'//, 'x86', 'x86_64'
        }

        //room配置，输出数据库配置信息
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
//        debug.setRoot('build-types/debug')
//        release.setRoot('build-types/release')
    }

    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

    // gradle签名配置
    signingConfigs {
        release {
            storeFile file(RELEASE_KEYSTORE_FILE)
            storePassword RELEASE_KEYSTORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }

        debug {
            storeFile file(DEBUG_KEYSTORE_FILE)
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newFileName
            if (variant.buildType.name == "debug") {
                newFileName = "WanAndroid-Debug-V${variant.versionName}.apk"
            } else if (variant.buildType.name == "release") {
                newFileName = "WanAndroid-Release-V${variant.versionName}.apk"
            }
            output.outputFileName = newFileName
        }
    }
}